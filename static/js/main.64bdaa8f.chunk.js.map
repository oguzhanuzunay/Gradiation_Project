{"version":3,"sources":["firebase.js","components/Navitagion/LoginPage/LoginPage.js","components/Loading/LoadingGif.gif","components/Loading/Loading.jsx","components/Search/Search.jsx","components/Locate/Locate.jsx","components/Map/MapOptions.js","components/Map/Map.styles.js","components/StartRide/StartRide.jsx","components/Map/Map.jsx","components/Navitagion/MainMenu/Hero.jsx","App.js","reportWebVitals.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","LoginPage","props","email","password","setEmail","setPassword","handleLogin","handleSignUp","hasAccount","setHasAccount","emailError","passwordError","className","type","autoFocus","required","value","onChange","e","target","onClick","Loading","style","src","loadingImage","marginTop","Search","panTo","setCordinate1","setCordinate2","onPositionSelect","onFinishSelect","clearOldPoint","setOrigin","setDestination","setLimit","usePlacesAutocomplete","requestOptions","location","lat","lng","radius","ready","suggestions","status","data","setValue","clearSuggestions","zIndex","onSelect","address","a","getGeocode","result","getLatLng","x","y","console","log","disabled","placeholder","map","id","description","Locate","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","alt","libraries","mapContainerStyle","width","height","center","options","styles","featureType","elementType","stylers","weight","color","visibility","saturation","lightness","disableDefaultUI","zoomControl","circleOptions","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","draggable","editable","visible","cordinateList","time","Date","info","infoText","getLocations","startPoint","endPoint","cord1","cord2","middlePointX","middlePointY","calculateMiddlePoint","StartRide","closeRide","clearAllPoint","cordinate1","cordinate2","setCircleRender","setCircleCenter","changeRadius","onDataLoadShowMarker","Card","opacity","borderColor","left","top","transform","border","Header","display","flexDirection","justifyContent","backgroundColor","right","padding","fontWeight","Body","Form","Group","controlId","Label","Row","Col","sm","Text","margin","Button","variant","size","parseFloat","distance","Math","hypot","calculateDistanceWithEuclidean","table","arr","counter","i","random","float","push","randomGenerator","Map","startRide","setResponse","response","useLoadScript","googleMapsApiKey","isLoaded","loadError","React","useState","markers","setMarkers","circleRender","circleCenter","selected","setSelected","setInfoText","destination","origin","limit","useCallback","onMapClick","event","current","latLng","list","concat","url","mapRef","useRef","onMapLoad","zoom","setZoom","mark","newMarkers","filter","onLoad","marker","animation","window","google","maps","Animation","DROP","icon","scaledSize","Size","Point","anchor","toISOString","onCloseClick","travelMode","callback","directionsService","onUnmount","directions","directionsRenderer","Hero","handleLogOut","setStartRide","App","user","setUser","setEmailError","setPasswordError","clearErrors","authListener","auth","onAuthStateChanged","useEffect","signOut","signInWithEmailAndPassword","catch","err","code","message","createUserWithEmailAndPassword","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64bdaa8f.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\n // Your web app's Firebase configuration\r\n  // For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyDcP7Js2l9b6jsTe3bWs6kxNqs70-qMqhs\",\r\n    authDomain: \"graduation-project-86023.firebaseapp.com\",\r\n    projectId: \"graduation-project-86023\",\r\n    storageBucket: \"graduation-project-86023.appspot.com\",\r\n    messagingSenderId: \"1046852282632\",\r\n    appId: \"1:1046852282632:web:c8fd09ebdd3ca25241e4bd\",\r\n    measurementId: \"G-D1R0LEF16H\"\r\n  };\r\n\r\n  const fire =firebase.initializeApp(firebaseConfig);\r\n  export default fire;","import React from 'react';\r\nimport './LoginPage.css';\r\n\r\nconst LoginPage = (props) => {\r\n  const {\r\n    email,\r\n    password,\r\n    setEmail,\r\n    setPassword,\r\n    handleLogin,\r\n    handleSignUp,\r\n    hasAccount,\r\n    setHasAccount,\r\n    emailError,\r\n    passwordError,\r\n  } = props;\r\n  return (\r\n    <section className=\"login\">\r\n      <div className=\"loginContainer\">\r\n        <label>Username</label>\r\n        <input\r\n          type=\"text\"\r\n          autoFocus\r\n          required\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <p className=\"errorMsg\">{emailError}</p>\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          required\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <p className=\"errorMsg\">{passwordError}</p>\r\n        <div className=\"btnContainer\">\r\n          {hasAccount ? (\r\n            <>\r\n              <button className=\"purpleButton\" onClick={handleLogin}>\r\n                Sign In\r\n              </button>\r\n              <p>\r\n                Don't have an account ?\r\n                <span\r\n                  onClick={() => {\r\n                    setHasAccount(!hasAccount);\r\n                  }}\r\n                >\r\n                  Sign Up\r\n                </span>\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <button className=\"purpleButton\" onClick={handleSignUp}>\r\n                Sign Up\r\n              </button>\r\n              <p>\r\n                Have an account ?\r\n                <span onClick={() => setHasAccount(!hasAccount)}>Sign In</span>\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","export default __webpack_public_path__ + \"static/media/LoadingGif.5b5d185a.gif\";","import React from 'react';\r\nimport loadingImage from './LoadingGif.gif';\r\nimport './loading.css';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div style={{}} className=\"loadingContainer\">\r\n      <img src={loadingImage} style={{ marginTop: '50px' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\n\r\nimport usePlacesAutocomplete, {\r\n  getGeocode,\r\n  getLatLng,\r\n} from 'use-places-autocomplete';\r\n\r\nimport {\r\n  Combobox,\r\n  ComboboxInput,\r\n  ComboboxPopover,\r\n  ComboboxList,\r\n  ComboboxOption,\r\n} from '@reach/combobox';\r\nimport '@reach/combobox/styles.css';\r\n\r\nconst Search = ({\r\n  panTo,\r\n  setCordinate1,\r\n  setCordinate2,\r\n  type,\r\n  onPositionSelect,\r\n  onFinishSelect,\r\n  clearOldPoint,\r\n  setOrigin,\r\n  setDestination,\r\n  setLimit,\r\n}) => {\r\n  const {\r\n    ready,\r\n    value,\r\n    suggestions: { status, data },\r\n    setValue,\r\n    clearSuggestions,\r\n  } = usePlacesAutocomplete({\r\n    requestOptions: {\r\n      location: { lat: () => 43.65324, lng: () => -79.3832 },\r\n      radius: 200 * 1000,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <Combobox\r\n        style={{ zIndex: 2 }}\r\n        onSelect={async (address) => {\r\n          setOrigin('');\r\n          setDestination('');\r\n          setLimit(0);\r\n          setValue(address, false);\r\n          clearSuggestions();\r\n          try {\r\n            const result = await getGeocode({ address });\r\n            const { lat, lng } = await getLatLng(result[0]);\r\n            if (type === 'startPoint') {\r\n              clearOldPoint('start');\r\n              setCordinate1({ x: lat, y: lng });\r\n              onPositionSelect(lat, lng, './logos/marker-green.png', 'start');\r\n            } else {\r\n              clearOldPoint('finish');\r\n              setCordinate2({ x: lat, y: lng });\r\n              onFinishSelect(lat, lng, './logos/marker-red.png', 'finish');\r\n            }\r\n            panTo({ lat, lng });\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n        }}\r\n      >\r\n        <ComboboxInput\r\n          style={{ zIndex: 2 }}\r\n          value={value}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n          }}\r\n          disabled={!ready}\r\n          placeholder=\"Enter an Adress\"\r\n        />\r\n        <ComboboxPopover style={{ zIndex: 2 }}>\r\n          <ComboboxList style={{ zIndex: 2 }}>\r\n            {status === 'OK' &&\r\n              data.map(({ id, description }) => (\r\n                <ComboboxOption key={id} value={description} />\r\n              ))}\r\n          </ComboboxList>\r\n        </ComboboxPopover>\r\n      </Combobox>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\n\r\nconst Locate = ({ panTo, setCordinate1, clearOldPoint, onPositionSelect }) => {\r\n  return (\r\n    <button\r\n      className=\"locate\"\r\n      onClick={() => {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (position) => {\r\n            let lat = position.coords.latitude;\r\n            let lng = position.coords.longitude;\r\n            clearOldPoint('start');\r\n            onPositionSelect(lat, lng, './logos/marker-green.png', 'start');\r\n            panTo({\r\n              lat,\r\n              lng,\r\n            });\r\n            setCordinate1({\r\n              x: lat,\r\n              y: lng,\r\n            });\r\n          },\r\n          () => null\r\n        );\r\n      }}\r\n    >\r\n      <img src=\"./logos/compass.png\" alt=\"compass - locate me\" />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Locate;\r\n","import MapStyles from './Map.styles';\r\n\r\nexport const libraries = ['places'];\r\nexport const mapContainerStyle = {\r\n  width: '100%',\r\n  height: '92vh',\r\n};\r\nexport const center = {\r\n  lat: 43.653225,\r\n  lng: -79.383186,\r\n};\r\nexport const options = {\r\n  styles: MapStyles,\r\n  disableDefaultUI: true,\r\n  zoomControl: true,\r\n};\r\nexport const circleOptions = {\r\n  strokeColor: '#FF0000',\r\n  strokeOpacity: 0.8,\r\n  strokeWeight: 2,\r\n  fillColor: '#FF0000',\r\n  fillOpacity: 0.1,\r\n  clickable: false,\r\n  draggable: false,\r\n  editable: false,\r\n  visible: false,\r\n  radius: 0,\r\n  zIndex: 1,\r\n};\r\n\r\nexport const cordinateList = [\r\n  {\r\n    lat: 43.14506241157973,\r\n    lng: -80.31427730859374,\r\n    time: new Date(86400000 + 1),\r\n    info: 'Accident on Tanner Rd at Pennbrooke Ln.',\r\n  },\r\n  {\r\n    lat: 43.321157725277914,\r\n    lng: -80.75373043359374,\r\n    time: new Date(86400000 + 2),\r\n    info: 'Accident on Houston Branch Rd at Providence Branch Ln.',\r\n  },\r\n  {\r\n    lat: 42.92422789558916,\r\n    lng: -80.96796383203124,\r\n    time: new Date(86400000 + 3),\r\n    info: 'Accident on I-595 Westbound at Exit 4 / Pine Island Rd.',\r\n  },\r\n];\r\n\r\nexport const infoText = [\r\n  'At TN-248/Peytonsville Rd/Exit 61 - Accident. Right lane blocked.',\r\n  'At Magic Mountain Pky - Accident. Hard shoulder blocked.',\r\n  'Restrictions due to accident on US-92 at Bethlehem Rd.',\r\n  'At Northwest Hwy/Exit 11 - Accident.',\r\n  'Accident on Fort Lowell Rd at Avenida del Clarin.',\r\n  'At I-287/W Oakland Ave - Accident.',\r\n  'Accident on Westpark Dr at 14th St.',\r\n  'Accident on CA-2 Southbound at Exit 13 I-5.',\r\n  'Incident on SIERRA AVE near LYTLE CREEK RD Expect delays.',\r\n  'Incident on I-94 WB near I-696 Drive with caution.',\r\n\r\n  'Lane blocked due to accident on I-285 Eastbound at Exit 29 Ashford Dunwoody Rd.',\r\n  'Accident on US-401 Main St Northbound at NC-42 NC 55 Hwy.',\r\n  'Accident on Chimney Rock Rd at US-90 Alt Main St.',\r\n  'At McLean Ave/Exit 3 - Accident. Left lane blocked.',\r\n  'Lane blocked due to accident on I-680 Northbound at Exit 53 CA-4.',\r\n  'Accident on I-26 Eastbound at Exit 213B Montague Ave.',\r\n  'Accident on Research Blvd Southbound at Pavilion Blvd.',\r\n  'At CA-22/Garden Grove Fwy - Accident.',\r\n  'Accident on 17 Mile Rd at Stout Ave.',\r\n  'Accident on I-90 Eastbound at Exit 48A.',\r\n];\r\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [\r\n  {\r\n    featureType: 'all',\r\n    elementType: 'geometry.fill',\r\n    stylers: [\r\n      {\r\n        weight: '2.00',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'all',\r\n    elementType: 'geometry.stroke',\r\n    stylers: [\r\n      {\r\n        color: '#9c9c9c',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'all',\r\n    elementType: 'labels.text',\r\n    stylers: [\r\n      {\r\n        visibility: 'on',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'landscape',\r\n    elementType: 'all',\r\n    stylers: [\r\n      {\r\n        color: '#f2f2f2',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'landscape',\r\n    elementType: 'geometry.fill',\r\n    stylers: [\r\n      {\r\n        color: '#ffffff',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'landscape.man_made',\r\n    elementType: 'geometry.fill',\r\n    stylers: [\r\n      {\r\n        color: '#ffffff',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'poi',\r\n    elementType: 'all',\r\n    stylers: [\r\n      {\r\n        visibility: 'off',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'road',\r\n    elementType: 'all',\r\n    stylers: [\r\n      {\r\n        saturation: -100,\r\n      },\r\n      {\r\n        lightness: 45,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'road',\r\n    elementType: 'geometry.fill',\r\n    stylers: [\r\n      {\r\n        color: '#eeeeee',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'road',\r\n    elementType: 'labels.text.fill',\r\n    stylers: [\r\n      {\r\n        color: '#7b7b7b',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'road',\r\n    elementType: 'labels.text.stroke',\r\n    stylers: [\r\n      {\r\n        color: '#ffffff',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'road.highway',\r\n    elementType: 'all',\r\n    stylers: [\r\n      {\r\n        visibility: 'simplified',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'road.arterial',\r\n    elementType: 'labels.icon',\r\n    stylers: [\r\n      {\r\n        visibility: 'off',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'transit',\r\n    elementType: 'all',\r\n    stylers: [\r\n      {\r\n        visibility: 'off',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'water',\r\n    elementType: 'all',\r\n    stylers: [\r\n      {\r\n        color: '#46bcec',\r\n      },\r\n      {\r\n        visibility: 'on',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'water',\r\n    elementType: 'geometry.fill',\r\n    stylers: [\r\n      {\r\n        color: '#c8d7d4',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'water',\r\n    elementType: 'labels.text.fill',\r\n    stylers: [\r\n      {\r\n        color: '#070707',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: 'water',\r\n    elementType: 'labels.text.stroke',\r\n    stylers: [\r\n      {\r\n        color: '#ffffff',\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React from 'react';\r\nimport './StartRide.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Search from '../Search/Search';\r\nimport Locate from '../Locate/Locate.jsx';\r\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap';\r\nimport Draggable from 'react-draggable';\r\nimport random from 'random';\r\nimport data from '../Map/Locations.json';\r\nimport { infoText } from '../Map/MapOptions';\r\n\r\nconst calculateDistanceWithEuclidean = (cord1, cord2) => {\r\n  let distance = Math.hypot(cord1.x - cord2.x, cord1.y - cord2.y);\r\n  console.log('distance :', distance * 100);\r\n  return distance * 100;\r\n};\r\n\r\nconst getLocations = (startPoint, endPoint) => {\r\n  //long=x,lat=y\r\n  const calculateMiddlePoint = (cord1, cord2) => {\r\n    let distanceX = cord1.x + cord2.x;\r\n    let distanceY = cord1.y + cord2.y;\r\n\r\n    let middlePointX = distanceX / 2;\r\n    let middlePointY = distanceY / 2;\r\n    console.log(`Orta Nokta \\nX: ${middlePointX} \\nY: ${middlePointY}`);\r\n\r\n    return { lat: middlePointX, lng: middlePointY };\r\n  };\r\n\r\n  const middlePoint = calculateMiddlePoint(startPoint, endPoint);\r\n\r\n  // setMarkers((current) => [...current, cordinateList]);\r\n  // console.log(cordinateList);\r\n\r\n  //data.response = (location) => {};\r\n  return middlePoint;\r\n};\r\n\r\nconst randomGenerator = (startPoint, endPoint) => {\r\n  console.table([startPoint, endPoint]);\r\n  let arr = [];\r\n\r\n  let counter = 0;\r\n  for (let i = 0; i < 20; i++) {\r\n    counter++;\r\n\r\n    if (startPoint.x < endPoint.x) {\r\n      var x = random.float(endPoint.x, startPoint.x);\r\n    } else {\r\n      var x = random.float(startPoint.x, endPoint.x);\r\n    }\r\n\r\n    if (startPoint.y < endPoint.y) {\r\n      var y = random.float(endPoint.y, startPoint.y);\r\n    } else {\r\n      var y = random.float(startPoint.y, endPoint.y);\r\n    }\r\n\r\n    arr.push({\r\n      lat: x,\r\n      lng: y,\r\n      time: new Date(86400000 + counter),\r\n      info: `${infoText[i]}`,\r\n    });\r\n  }\r\n  console.log(arr);\r\n  return arr;\r\n};\r\n\r\nconst StartRide = ({\r\n  closeRide,\r\n  panTo,\r\n  setCordinate1,\r\n  setCordinate2,\r\n  onPositionSelect,\r\n  clearOldPoint,\r\n  setOrigin,\r\n  setDestination,\r\n  setLimit,\r\n  onFinishSelect,\r\n  clearAllPoint,\r\n  cordinate1,\r\n  cordinate2,\r\n  setCircleRender,\r\n  setCircleCenter,\r\n  changeRadius,\r\n  onDataLoadShowMarker,\r\n}) => {\r\n  return (\r\n    <Draggable>\r\n      <Card\r\n        className=\"card\"\r\n        style={{\r\n          opacity: 0.85,\r\n          borderColor: '#603bbb !important',\r\n          position: 'absolute',\r\n          left: '50%',\r\n          top: '50%',\r\n          transform: 'translate(-50%, -50%)',\r\n          zIndex: '1',\r\n          border: 'solid 5px #603bbb',\r\n        }}\r\n      >\r\n        <Card.Header\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <h1>Start Ride</h1>\r\n          <button\r\n            style={{\r\n              color: '#603bbb',\r\n              border: '0',\r\n              backgroundColor: 'rgba(255,0,0,0)',\r\n              height: '20px',\r\n              right: '12px',\r\n              top: '0px',\r\n              padding: '0px',\r\n              fontWeight: '900',\r\n            }}\r\n            onClick={() => closeRide()}\r\n          >\r\n            X\r\n          </button>\r\n        </Card.Header>\r\n        <Card.Body className=\"m2\">\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Choose a starting location.</Form.Label>\r\n\r\n            <Row>\r\n              <Col sm={10}>\r\n                <Search\r\n                  panTo={panTo}\r\n                  type={'startPoint'}\r\n                  setCordinate1={setCordinate1}\r\n                  setCordinate2={setCordinate2}\r\n                  onPositionSelect={onPositionSelect}\r\n                  clearOldPoint={clearOldPoint}\r\n                  setOrigin={setOrigin}\r\n                  setDestination={setDestination}\r\n                  setLimit={setLimit}\r\n                />\r\n              </Col>\r\n              <Col sm={2} style={{ padding: '0px' }}>\r\n                <Locate\r\n                  setLimit={setLimit}\r\n                  panTo={panTo}\r\n                  setCordinate1={setCordinate1}\r\n                  clearOldPoint={clearOldPoint}\r\n                  onPositionSelect={onPositionSelect}\r\n                  setOrigin={setOrigin}\r\n                  setDestination={setDestination}\r\n                />\r\n              </Col>\r\n            </Row>\r\n\r\n            <Form.Text className=\"text-muted\">\r\n              Choose your starting location for driving\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Choose destination location</Form.Label>\r\n            <Search\r\n              style={{ margin: '20px', top: '3rem' }}\r\n              type={'endPoint'}\r\n              panTo={panTo}\r\n              setCordinate1={setCordinate1}\r\n              setCordinate2={setCordinate2}\r\n              onFinishSelect={onFinishSelect}\r\n              clearOldPoint={clearOldPoint}\r\n              setOrigin={setOrigin}\r\n              setDestination={setDestination}\r\n              setLimit={setLimit}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Choose your destination for driving{' '}\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Button\r\n            clearAllPoint={clearAllPoint}\r\n            variant=\"primary\"\r\n            style={{ backgroundColor: '#603bbb', borderColor: '#603bbb' }}\r\n            type=\"submit\"\r\n            size=\"lg\"\r\n            type=\"calculateDistance\"\r\n            block\r\n            clearOldPoint={clearOldPoint}\r\n            onClick={() => {\r\n              closeRide(true);\r\n              clearAllPoint();\r\n              getLocations(cordinate1, cordinate2);\r\n              setOrigin({\r\n                lat: parseFloat(cordinate1.x),\r\n                lng: parseFloat(cordinate1.y),\r\n              });\r\n              setDestination({\r\n                lat: parseFloat(cordinate2.x),\r\n                lng: parseFloat(cordinate2.y),\r\n              });\r\n              setCircleRender(true);\r\n              changeRadius(0);\r\n              changeRadius(\r\n                calculateDistanceWithEuclidean(cordinate1, cordinate2) * 437\r\n              );\r\n              setCircleCenter(getLocations(cordinate1, cordinate2));\r\n              onDataLoadShowMarker(randomGenerator(cordinate1, cordinate2));\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default StartRide;\r\n","import React, { useState } from 'react';\r\nimport './Map.css';\r\nimport Loading from '../Loading/Loading.jsx';\r\nimport '../StartRide/StartRide.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport RideCard from '../StartRide/StartRide';\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n  DirectionsRenderer,\r\n  DirectionsService,\r\n  Circle,\r\n} from '@react-google-maps/api';\r\n\r\nimport {\r\n  libraries,\r\n  mapContainerStyle,\r\n  center,\r\n  options,\r\n  cordinateList,\r\n  circleOptions,\r\n} from './MapOptions';\r\n\r\nconst changeRadius = (radius) => {\r\n  circleOptions.radius = radius;\r\n};\r\n\r\nconst Map = ({ startRide, closeRide, setResponse, response }) => {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    //googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n    googleMapsApiKey: 'AIzaSyAfnXHBS80WU5DFMjNhQu9Zb42EdV_41qQ',\r\n    libraries,\r\n  });\r\n\r\n  const [markers, setMarkers] = React.useState([]);\r\n  const [circleRender, setCircleRender] = useState(false);\r\n  const [circleCenter, setCircleCenter] = useState({});\r\n  const [selected, setSelected] = React.useState(null);\r\n  const [infoText, setInfoText] = React.useState('');\r\n  // Hooks\r\n\r\n  const [cordinate1, setCordinate1] = useState({ x: 0, y: 0 });\r\n  const [cordinate2, setCordinate2] = useState({ x: 0, y: 0 });\r\n\r\n  //Direction\r\n  const [destination, setDestination] = useState('');\r\n  const [origin, setOrigin] = useState('');\r\n  const [limit, setLimit] = useState(0);\r\n\r\n  // functions\r\n  const clearAllPoint = React.useCallback(() => {\r\n    setMarkers(() => []);\r\n  }, []);\r\n\r\n  let directionsCallback = (response) => {\r\n    console.log(response);\r\n    if (response !== null && limit < 2) {\r\n      setLimit(limit + 1);\r\n      console.log(limit);\r\n      if (response.status === 'OK') {\r\n        setResponse(response);\r\n      } else {\r\n        console.log('response: ', response);\r\n      }\r\n    }\r\n  };\r\n\r\n  //----Add to Maker When Click to Map\r\n  const onMapClick = React.useCallback((event) => {\r\n    setMarkers((current) => [\r\n      ...current,\r\n      {\r\n        lat: event.latLng.lat(),\r\n        lng: event.latLng.lng(),\r\n        time: new Date(),\r\n        info: '',\r\n      },\r\n    ]);\r\n  }, []);\r\n\r\n  // Load Traffic Accident\r\n  const onDataLoadShowMarker = React.useCallback((list) => {\r\n    setMarkers((current) => [...current].concat(list));\r\n  }, []);\r\n\r\n  const onPositionSelect = React.useCallback((lat, lng, url, type) => {\r\n    setMarkers((current) => [\r\n      ...current,\r\n      {\r\n        lat: lat,\r\n        lng: lng,\r\n        time: new Date(),\r\n        info: `${type} Point`,\r\n        url: url || './logos/marker-green.png',\r\n        type: type,\r\n      },\r\n    ]);\r\n    console.log(type, lat, lng);\r\n  }, []);\r\n\r\n  const onFinishSelect = React.useCallback((lat, lng, url, type) => {\r\n    onPositionSelect(lat, lng, url, type);\r\n  }, []);\r\n\r\n  const clearOldPoint = (type) => {\r\n    console.log(markers.map((mark) => mark.type));\r\n    let newMarkers = markers.filter((mark) => mark.type !== type);\r\n    console.log(newMarkers);\r\n    setMarkers(() => [...newMarkers]);\r\n  };\r\n\r\n  const mapRef = React.useRef();\r\n  const onMapLoad = React.useCallback((map) => {\r\n    mapRef.current = map;\r\n    onDataLoadShowMarker(cordinateList);\r\n  }, []);\r\n\r\n  const panTo = React.useCallback(({ lat, lng, zoom }) => {\r\n    mapRef.current.panTo({ lat, lng });\r\n    mapRef.current.setZoom(zoom || 10);\r\n  });\r\n\r\n  if (loadError) return 'Error loading Maps';\r\n  if (!isLoaded) return <Loading />;\r\n\r\n  return (\r\n    <div>\r\n      {startRide ? (\r\n        <RideCard\r\n          onDataLoadShowMarker={onDataLoadShowMarker}\r\n          closeRide={closeRide}\r\n          panTo={panTo}\r\n          setCordinate1={setCordinate1}\r\n          setCordinate2={setCordinate2}\r\n          onPositionSelect={onPositionSelect}\r\n          clearOldPoint={clearOldPoint}\r\n          setOrigin={setOrigin}\r\n          setDestination={setDestination}\r\n          setLimit={setLimit}\r\n          onFinishSelect={onFinishSelect}\r\n          clearAllPoint={clearAllPoint}\r\n          cordinate1={cordinate1}\r\n          cordinate2={cordinate2}\r\n          setCircleRender={setCircleRender}\r\n          setCircleCenter={setCircleCenter}\r\n          changeRadius={changeRadius}\r\n        />\r\n      ) : (\r\n        false\r\n      )}\r\n\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={8}\r\n        center={center}\r\n        options={options}\r\n        onClick={onMapClick}\r\n        onLoad={onMapLoad}\r\n      >\r\n        {markers.map((marker) => (\r\n          <Marker\r\n            key={marker.time.toISOString()}\r\n            animation={window.google.maps.Animation.DROP}\r\n            position={{ lat: marker.lat, lng: marker.lng }}\r\n            icon={{\r\n              url: marker.url || './logos/crash.png',\r\n              scaledSize: new window.google.maps.Size(32, 32),\r\n              origin: new window.google.maps.Point(0, 0),\r\n              anchor: new window.google.maps.Point(15, 15),\r\n            }}\r\n            onClick={() => {\r\n              setInfoText(marker.info);\r\n              setSelected(marker);\r\n            }}\r\n          />\r\n        ))}\r\n\r\n        {selected ? (\r\n          <InfoWindow\r\n            position={{ lat: selected.lat, lng: selected.lng }}\r\n            onCloseClick={() => {\r\n              setSelected(null);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2>Potanciel Crash</h2>\r\n              <p>{infoText}</p>\r\n            </div>\r\n          </InfoWindow>\r\n        ) : null}\r\n        {\r\n          // Direction on Maps\r\n          destination !== '' && origin !== '' && (\r\n            <DirectionsService\r\n              // required\r\n              options={{\r\n                destination: destination,\r\n                origin: origin,\r\n                travelMode: 'DRIVING',\r\n              }}\r\n              // required\r\n              callback={directionsCallback}\r\n              // optional\r\n              onLoad={(directionsService) => {\r\n                console.log(\r\n                  'DirectionsService onLoad directionsService: ',\r\n                  directionsService\r\n                );\r\n              }}\r\n              // optional\r\n              onUnmount={(directionsService) => {\r\n                console.log(\r\n                  'DirectionsService onUnmount directionsService: ',\r\n                  directionsService\r\n                );\r\n              }}\r\n            />\r\n          )\r\n        }\r\n\r\n        {response !== null && (\r\n          <DirectionsRenderer\r\n            // required\r\n            options={{\r\n              directions: response,\r\n            }}\r\n            // optional\r\n            onLoad={(directionsRenderer) => {\r\n              console.log(\r\n                'DirectionsRenderer onLoad directionsRenderer: ',\r\n                directionsRenderer\r\n              );\r\n            }}\r\n            // optional\r\n            onUnmount={(directionsRenderer) => {\r\n              console.log(\r\n                'DirectionsRenderer onUnmount directionsRenderer: ',\r\n                directionsRenderer\r\n              );\r\n            }}\r\n          />\r\n        )}\r\n\r\n        {circleRender && (\r\n          <Circle center={circleCenter} options={circleOptions} />\r\n        )}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState } from 'react';\r\nimport Map from '../../Map/Map';\r\nimport './Hero.css';\r\n\r\nconst Hero = ({ handleLogOut }) => {\r\n  \r\n  const [startRide, setStartRide] = useState(true);\r\n  const [response, setResponse] = useState(null);\r\n\r\n  let closeRide = () => {\r\n    setStartRide(false);\r\n  };\r\n\r\n//The part where the page is rendered.\r\n  return (\r\n    <>\r\n      <section className=\"hero\">\r\n        <nav>\r\n          <div className=\"cont\">\r\n            <h2>Welcome</h2>\r\n            <button className=\"purpleButton\">Map</button>\r\n            <button\r\n              className=\"purpleButton\"\r\n              onClick={() => {\r\n                setStartRide(true);\r\n               // setResponse(null);\r\n              }}\r\n            >\r\n              Start\r\n            </button>\r\n          </div>\r\n          <div className=\"cont right\">\r\n            <button className=\"purpleButton\" onClick={handleLogOut}>\r\n              Logout\r\n            </button>\r\n          </div>\r\n        </nav>\r\n        <Map\r\n          startRide={startRide}\r\n          closeRide={closeRide}\r\n          setStartRide={setStartRide}\r\n          response={response}\r\n          setResponse={setResponse}\r\n        />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport fire from './firebase';\r\n\r\n//import Navigation from './components/Navitagion/Navigation';\r\nimport LoginPage from './components/Navitagion/LoginPage/LoginPage';\r\nimport Hero from './components/Navitagion/MainMenu/Hero.jsx';\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [hasAccount, setHasAccount] = useState(false);\r\n\r\n  //Clears inputs when switching between Sign in and Sign up pages. \r\n  const clearInputs = () => {\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  //Clears errors when click Sign in or Sign up button. \r\n  const clearErrors = () => {\r\n    setEmailError('');\r\n    setPasswordError('');\r\n  };\r\n\r\n  // Checks user information from database. If true, it logs in.\r\n  const handleLogin = () => {\r\n    clearErrors();\r\n    fire\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case 'auth/invalid-email':\r\n          case 'auth/user-disabled':\r\n          case 'auth/user-not-found':\r\n            setEmailError(err.message);\r\n            break;\r\n          case 'auth/wrong-password':\r\n            setPasswordError(err.message);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n  };\r\n\r\n  // The function that the user uses when registering with the application. \r\n  // If the email and password format is correct, it adds the user to the database.\r\n  const handleSignUp = () => {\r\n    clearErrors();\r\n    fire\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case 'auth/email-already-in-use':\r\n          case 'auth/invalid-email':\r\n            setEmailError(err.message);\r\n            break;\r\n          case 'auth/week-password':\r\n            setPasswordError(err.message);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n  };\r\n  // used when the user logs out of the application.\r\n  const handleLogOut = () => {\r\n    fire.auth().signOut();\r\n  };\r\n\r\n\r\n  // If the user has logged into the application before, it checks it and opens the application directly.\r\n  // No need to login again.\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const authListener = () => {\r\n    fire.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        clearInputs();\r\n        setUser(user);\r\n      } else {\r\n        setUser('');\r\n      }\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    authListener();\r\n  }, [authListener]);\r\n\r\n\r\n\r\n  //The part where the page is rendered. If the user (if logged in) exists, the Login page opens. \r\n  return (\r\n    <div className=\"App\">\r\n      {user ? (\r\n        <Hero handleLogOut={handleLogOut} />\r\n      ) : (\r\n        <LoginPage\r\n          email={email}\r\n          password={password}\r\n          setEmail={setEmail}\r\n          setPassword={setPassword}\r\n          handleLogin={handleLogin}\r\n          handleSignUp={handleSignUp}\r\n          setHasAccount={setHasAccount}\r\n          hasAccount={hasAccount}\r\n          emailError={emailError}\r\n          passwordError={passwordError}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}